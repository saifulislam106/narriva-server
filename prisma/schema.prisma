// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  name          String
  password      String
  role          Role           @default(USER)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  subscriptions Subscription[]
  stripeCustomerId  String?
}

model Subscription {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String 
  name      String
  price     String
  plan      PlanType
  feature   String[]
  startDate DateTime @default(now())
  endDate   DateTime @default(now())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

enum Role {
  ADMIN
  USER
}

enum PlanType {
  DIGITAL
  PREMIUM
  DELUXE
}

// model SubscriptionPlan {
//   id        String   @id @default(uuid())
//   name      String
//   description String
//   price     String
//   features  String[]
//   subscriptions    Subscription[]
// }

// model Subscription {
//   id        String   @id @default(uuid())
//   user      User     @relation(fields: [userId], references: [id])
//   userId    String
//   subscriptionPlan      SubscriptionPlan     @relation(fields: [subscriptionPlanId], references: [id])
//   subscriptionPlanId    String
//   startDate DateTime @default(now())
// stripeSubscriptionId   String?  @unique            
// stripeCustomerId       String?              
// stripeCheckoutSessionId String?             
// cancelAtPeriodEnd      Boolean?     
//   endDate   DateTime @default(now())
//   status    SubscriptionStatus   @default(PENDING) 
//   createdAt DateTime @default(now())
// }
